# 230608_숫자 계산
'''
파이썬에서는 숫자의 자료형(종류)에 따라서 계산 결과가 달라질 수 있음.
파이썬에서는 숫자를 정수(int), 실수(float), 복소수(complex)로 구분 한다.
'''


# 정수계산

### 사칙연산

# 나누기(/)
print(4/2)
print(5/2) # 소수점이 붙은 수로 변환 (float)
print(type(2*2))
print(type(2/2))

# 몫 연산자 //
print(5//2)

# 나머지를 배제해야할 때 //을 사용한다. 버림 나눗셈(floor division)
# 나눗셈의 결과에서 소숫점 이하는 버린다.

print(5.5 // 2, 4//2.0 , 4.1//2.1, 4.12 // 4.11)
# 출력결과 2.0 2.0 1.0 1.0
# 출력 결과에서 알수있는점은 연산자 중에 하나라도 실수라면 결과는 항상.0으로 끝난다.

# 나머지 연산자 (%)
# 모듈로(modulo) 연산자)
print(5%2)

# 거듭제곱 연산자 (**)
print(2**10)
print(2 ** 0.5) # 루트

# 값을 정수로 만들기(소수점 없애기)
''' 
계산결과가 실수로 나왔을 경우에, 강제로 정수로 만들어야할 때는, 
int에 괄호를 붙이고 숫자 또는 계산식을 넣으면 됨
int(숫자)
int(계산식) ex) int(5/2)
int(문자열) ex) int("1.1"), int("5")
5 ≠ "5"  
window + . 이모지 단축키
'''

print(3.3, int(3.3), type(3.3), type(int(3.3)))
print(137/29)
print(int(137/29))  # int(x/y) == x//y
print("5", type("5"), int("5"), type(int("5")),5, type(5))

print(divmod(5,2)) # 5를 2로 나눴을 때 몪과 나머지를 반환


# 실수계산
# 계산하는 대상(피연산자) 중에 하나라도 실수라면 무조건 실수처리
# 실수끼리의 덧셈

print(3.5 + 2.1)
print(3 + 2.1)
print(3.5 + 2)

# 부동소수점
print(4.3 - 2.7)
print(2.7 - 1.5)

# 컴퓨터는 0.1로 모든 값을 기억하고 2의 배수의 값만 표시가 가능하다.
# 실수와 정수를 함께 계산하면 표현 범위가 넓은 실수로 표현
print(5.2 + 1 + 7)
# 값을 실수로 만들기 (float)

print(type(3.5))

# 괄호 사용 - * 우선순위 함수의 실행
print(35 + 1 * 2) # *가 우선순위
print((35+1) * 2) # ()에 묶인 +가 우선순위